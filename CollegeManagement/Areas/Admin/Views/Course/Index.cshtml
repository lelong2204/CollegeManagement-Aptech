@{
    ViewData["Title"] = "Index";
    var userInfo = (AccountLogin)Context.Items["UserLogin"];
}

<h1>Index</h1>

@if (!userInfo.Role.Contains("Faculty".ToUpper()))
{
    <p>
        <a asp-action="Create" class="btn btn-success">Create New</a>
    </p>
}
<table class="table table-striped table-bordered" id="datatable">
</table>

@section Scripts {
    @if (userInfo.Role.Contains("Faculty".ToUpper()))
    {
        <script>
            var isFaculty = true
        </script>
    }
    else
    {
        <script>
            var isFaculty = false
        </script>
    }
<script>
        $(document).ready(function () {
            $('#datatable').DataTable({
                order: [[9, "desc"]],
                ajax: {
                    url: '/Admin/Course/List',
                    dataSrc: function (res) {
                        return res.data
                    }
                },
                language: {
                    paginate: {
                        previous: "<",
                        next: ">",
                    }
                },
                columns: [
                    { data: 'name' },
                    { data: 'info' },
                    { data: 'price' },
                    {
                        data: 'studentNumber'
                    },
                    {
                        data: 'imageURL',
                        render: (data, type, row, meta) => {
                            return `<img
                                        src="${row.imageURL !== undefined && row.imageURL && row.imageURL != "" ? row.imageURL : DEFAULT_IMG}"
                                    class="img-index" />`
                        }
                    },
                    { data: 'departmentName' },
                    {
                        data: 'status',
                        render: (data, type, row, meta) => {
                            if (data === 1) {
                                return `<p class="text-info">DONE</p>`
                            }
                            return `<p class="text-warning">IsErolling</p>`
                        }
                    },
                    { data: 'studentCount' },
                    {
                        data: 'startDate',
                        render: (data, type, row, meta) => {
                            return `${data ? moment(data).format("YYYY/MM/DD") : ""}`
                        }
                    },
                    {
                        data: 'endDate',
                        render: (data, type, row, meta) => {
                            return `${data ? moment(data).format("YYYY/MM/DD") : ""}`
                        }
                    },
                    {
                        data: 'id',
                        render: (data, type, row, meta) => {
                            if (isFaculty === true) {
                                return `<div>
                                    <a href="/Admin/Course/Details/${row.id}" class="btn btn-action btn-info"><i class="fa fa-eye"></i></a>
                                </div>`
                            }
                            if (row.status == 1) {
                                return `<div>
                                    <a href="/Admin/Course/Details/${row.id}" class="btn btn-action btn-info"><i class="fa fa-eye"></i></a>
                                    <a href="/Admin/Course/Delete/${row.id}" class="btn btn-action btn-danger"><i class="fa fa-trash"></i></a>
                                </div>`
                            }
                            if (row.status != 1 && new Date(row.endDate) < new Date().setHours(0,0,0,0)) {
                                return `<div>
                                <a href="/Admin/Course/Edit/${row.id}" class="btn btn-action btn-warning"><i class="fa fa-edit"></i></a>
                                <button data-id="${row.id}" class="update_course btn btn-action btn-primary"><i class="fa fa-sync" aria-hidden="true"></i></button>
                                <a href="/Admin/Course/Details/${row.id}" class="btn btn-action btn-info"><i class="fa fa-eye"></i></a>
                                <a href="/Admin/Course/Delete/${row.id}" class="btn btn-action btn-danger"><i class="fa fa-trash"></i></a>
                            </div>`
                            }
                            return `<div>
                                <a href="/Admin/Course/Edit/${row.id}" class="btn btn-action btn-warning"><i class="fa fa-edit"></i></a>
                                <a href="/Admin/Course/Details/${row.id}" class="btn btn-action btn-info"><i class="fa fa-eye"></i></a>
                                <a href="/Admin/Course/Delete/${row.id}" class="btn btn-action btn-danger"><i class="fa fa-trash"></i></a>
                            </div>`
                        }
                    },
                ],
                columnDefs: [
                    {
                        targets: 0,
                        title: "Name",
                        className: "text-center",
                    },
                    {
                        targets: 1,
                        title: 'Information',
                        className: "td-word_break"
                    },
                    {
                        targets: 2,
                        title: 'Price',
                        className: "td-word_break"
                    },
                    {
                        targets: 3,
                        title: 'Student Number',
                        className: "td-word_break"
                    },
                    {
                        targets: 4,
                        title: 'Image',
                        className: "td-word_break"
                    },
                    {
                        targets: 5,
                        title: 'Department Name',
                        className: "td-word_break"
                    },
                    {
                        targets: 6,
                        title: 'Status',
                        className: "td-word_break"
                    },
                    {
                        targets: 7,
                        title: 'Student Register',
                        className: "td-word_break"
                    },
                    {
                        targets: 8,
                        title: 'Start Date',
                        className: "td-word_break"
                    },
                    {
                        targets: 9,
                        title: 'End Date',
                        className: "td-word_break"
                    },
                    {
                        targets: 10,
                        title: 'Action'
                    }
                ],
                select: {
                    style: 'os',
                    selector: 'td:first-child'
                },
            })

            $(document).on('click', '.update_course', function () {
                let id = $(this).data("id")
                addIndicator()
                $.ajax({
                    url: "/Admin/Course/UpdateCourseStatus",
                    type: "Post",
                    data: { id: id},
                    success: function (res) {
                        removeIndicator()
                        if (res.status) {
                            notificationSuccess(res.msg);
                            window.location.reload();
                        } else {
                            notificationError(res.msg);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.log(xhr, status, error)
                        removeIndicator()
                        notificationError(error);
                    }
                })
            })
        })
</script>
}