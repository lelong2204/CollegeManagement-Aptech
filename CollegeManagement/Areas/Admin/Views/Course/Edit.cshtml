@model CourseUpSertDTO

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Course</h4>
<hr />
<div class="row">
    <div class="col-md-6">
        <form asp-action="Edit" id="course_form" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Info" class="control-label">
                    Information
                </label>
                <textarea class="form-control" asp-for="Info" rows="3"></textarea>
                <span asp-validation-for="Info" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="StudentNumber" class="control-label"></label>
                @if (Model.EndDate != null && Model.EndDate <= DateTime.Now)
                {
                    <input asp-for="StudentNumber" class="form-control" disabled />
                }
                else
                {
                    <input asp-for="StudentNumber" class="form-control" />
                }
                <span asp-validation-for="StudentNumber" class="text-danger"></span>
            </div>
            <div class="form-group form-switch" style="padding: 0">
                <label asp-for="Focus" class="form-check-label" for="flexSwitchCheckChecked"></label>
                <input asp-for="Focus" class="form-check-input" style="float:right" type="checkbox" id="flexSwitchCheckChecked">
                <span asp-validation-for="Focus" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="StartDate" class="control-label"></label>
                @if (Model.EndDate != null && Model.EndDate <= DateTime.Now)
                {
                    <input asp-for="StartDate" class="form-control" disabled />
                }
                else
                {
                    <input asp-for="StartDate" class="form-control" />
                }
                <span asp-validation-for="StartDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="EndDate" class="control-label"></label>
                @if (Model.EndDate != null && Model.EndDate <= DateTime.Now)
                {
                    <input asp-for="EndDate" class="form-control" disabled />
                }
                else
                {
                    <input asp-for="EndDate" class="form-control" />
                }
                <span asp-validation-for="EndDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DepartmentID" class="control-label">Department</label>
                <select asp-for="DepartmentID" class="select2 form-control">
                    @foreach (var department in Model.DepartmentList)
                    {
                        <option value="@department.ID">@department.Name</option>
                    }
                </select>
                <span asp-validation-for="DepartmentID" class="text-danger"></span>
            </div>
            <label>Add Subject</label>
            <table class="row table table-hover">
                <tbody id="course_subject" class="col-12">
                </tbody>
            </table>
            <span id="subject_error" class="text-danger col-12"></span>
            <button type="button" id="add_subject" class="btn btn-primary mb-2 col-12">Add Subject</button>
            <div class="form-group">
                <label asp-for="Image" class="control-label"></label>
                <button type="button" class="btn btn-info" id="img-select-btn">Choose Image...</button>
                <input asp-for="Image" type="file" class="form-control" id="image-select" hidden accept="image/*" />
            </div>
            <div class="form-group">
                <img class="upload-img" src="@Model.ImageURL" />
            </div>
            <input type="hidden" asp-for="ID" />
            <div class="form-group">
                <button type="button" id="btn_edit" class="btn btn-warning mr-2">
                    Save
                </button>
                <a asp-action="Index" class="btn btn-secondary">Back to List</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        var subjectIndex = 0;
        var subjectData = [];
        var subjectList = [];
        var facultyList = [];

        $(document).ready(function () {
            $("#StartDate").attr("min", $("#StartDate").val());
            $("#StartDate").attr("max", $("#EndDate").val());
            $("#EndDate").attr("min", $("#StartDate").val());
            $("#StartDate").on('change', function () {
                $("#EndDate").attr("min", $(this).val());
            })

            $("#EndDate").on('change', function () {
                $("#StartDate").attr("max", $(this).val());
            })

            $('#add_subject').on('click', function (e) {
                $("#subject_error").text("")

                addSubject();
            })

            $('#btn_edit').on('click', function () {
                $("#subject_error").text("")
                var subjects = [];
                var isValid = true;
                $.each(subjectData, function (i, data) {
                    if (data !== undefined && data) {
                        if (data.subjectID === undefined || !data.subjectID) {
                            isValid = false;
                            $(`#error_subject_${i}`).text("This field is required");

                        }

                        if (data.facultyID === undefined || !data.facultyID) {
                            isValid = false;
                            $(`#error_faculty_${i}`).text("This field is required");

                        }

                        if (data.facultyID !== undefined && data.facultyID &&
                        data.subjectID !== undefined && data.subjectID) {
                            subjects.push({
                                'SubjectID': parseInt(data.subjectID),
                                'FacultyID': parseInt(data.facultyID)
                            })

                            $(`#error_subject_${i}`).text("");
                        }
                    }
                });

                courseIMG = $('#image-select');
                var submitData = new FormData();

                if (courseIMG.get(0) !== undefined
                    && courseIMG.get(0)
                    && courseIMG.get(0).files
                    && courseIMG.get(0).files.length) {
                    submitData.append('Image', courseIMG.get(0).files[0])
                }

                if (!isValid) return;

                if ($('.text-danger').text().length > 0) return;

                $.validator.unobtrusive.parse($('#course_form'));

                if (!$('#course_form').valid()) {
                    return;
                }

                var form = $('#course_form').serializeArray();
                form.push({ name: "Subjects", value: JSON.stringify(subjects) });
                $.each(form, function (i) {
                    submitData.append($(this)[0].name, $(this)[0].value);
                })

                $.ajax({
                    url: "/Admin/Course/Edit",
                    type: "POST",
                    data: submitData,
                    processData: false,
                    contentType: false,
                    success: function (res) {
                        if (res.status) {
                            notificationSuccess(res.msg);
                            window.location.href = "@Url.Action("Index","Course")";
                        }
                    },
                    error: function (xhr, status, error) {
                        notificationError(error);
                    }
                })
            });
        })

        $(document).on('click', '.remove-subject', function () {
            if ($('#course_subject').find('tr').length === 1) {
                $("#subject_error").text("Need at least one subject")
                return;
            }

            var index = $(this).data('index');
            $('#course_subject').find(`tr[data-index='${index}']`).remove();
            facultyList[index] = null;
            subjectList[index] = null;
            subjectData[index] = null;
        })

        function addSubject(subjectName = null, subjectID = null,
            facultyName = null, facultyID = null) {
            subjectData.push({ subjectID: subjectID, facultyID: facultyID });
            subjectList.push(subjectID);
            facultyList.push(facultyID);

            $('#course_subject').append(`
                <tr class="row" data-index="${subjectIndex}">
                    <td class="col-md-5">
                        <div class="form-group">
                            <label class="control-label">Subject</label>
                            <select class="select2 form-control subject_select subject_${subjectIndex}" data-index="${subjectIndex}">
                            </select>
                            <span id='error_subject_${subjectIndex}' class="text-danger"></span>
                        </div>
                    </td>
                    <td class="col-md-5">
                        <div class="form-group">
                            <label class="control-label">Faculty</label>
                            <select class="select2 form-control faculty_select faculty_${subjectIndex}" data-index="${subjectIndex}">
                            </select>
                            <span id='error_faculty_${subjectIndex}' class="text-danger"></span>
                        </div>
                    </td>
                    <td class="col-md-2" style="display: flex; align-items:center">
                        <button type="button" data-index="${subjectIndex}" class="btn btn-danger remove-subject">
                            <i class="fa fa-trash"></i>
                        </button>
                    </td>
                </tr>`);

            if (subjectName && subjectID) {
                $(`.subject_${subjectIndex}`).append(
                    new Option(subjectName, subjectID, true, true)
                ).trigger("change");
            }

            $(`.subject_${subjectIndex}`).select2({
                ajax: {
                    url: '/Admin/Subject/Select2',
                    dataType: 'json',
                    delay: 100,
                    data: function (params) {
                        var query = {
                            search: params.term,
                            facultyID: facultyList[$(this).data('index')],
                            subjectExist: JSON.stringify(subjectList)
                        }
                        return query;
                    },
                    processResults: function (data) {
                        return {
                            results: $.map(data, function (obj) {
                                return { id: obj.id, text: obj.name };
                            })
                        };
                    }
                },
                allowClear: true, placeholder: "Select subject"
            }).on('change', function () {
                var index = $(this).data('index');
                var val = $(this).val();

                if (val && val !== undefined) {
                    if (subjectList.includes(val)) {
                        $(`#error_subject_${index}`).text("This subject was exist");
                    } else {
                        $(`#error_subject_${index}`).text("");
                    }
                } else {
                    $(`#error_subject_${index}`).text("This field is required");
                }

                subjectList[index] = val;
                subjectData[index].subjectID = val;
            });

            if (facultyName && facultyID) {
                $(`.faculty_${subjectIndex}`).append(
                    new Option(facultyName, facultyID, true, true)
                ).trigger("change");
            }
            $(`.faculty_${subjectIndex}`).select2({
                ajax: {
                    url: '/Admin/Faculty/Select2',
                    dataType: 'json',
                    delay: 100,
                    data: function (params) {
                        var query = {
                            search: params.term,
                            subjectID: subjectList[$(this).data('index')],
                            facultyExist: JSON.stringify(facultyList)
                        }
                        return query;
                    },
                    processResults: function (data) {
                        return {
                            results: $.map(data, function (obj) {
                                return { id: obj.id, text: obj.name };
                            })
                        };
                    }
                },
                allowClear: true, placeholder: "Select faculty"
            }).on('change', function () {
                var index = $(this).data('index');
                var val = $(this).val();
                facultyList[index] = val;
                subjectData[index].facultyID = val;

                if (val && val !== undefined) {
                    $(`#error_faculty_${index}`).text("");
                } else {
                    $(`#error_faculty_${index}`).text("This field is required");
                }
            });

            subjectIndex++;
        }
    </script>

    @if (Model.SubjectList.Any())
    {
        foreach (var s in Model.SubjectList)
        {
            <script>
                $(document).ready(function () {
                    addSubject("@s.Subject.Name", "@s.SubjectID", "@s.Faculty.Name", "@s.FacultyID")
                })
            </script>
        }
    }
}
