@model IEnumerable<CollegeManagement.Models.User>

@{
    ViewData["Title"] = "List";
    var userInfo = (AccountLogin)Context.Items["UserLogin"];
}

<h1>Index</h1>

<p>
    <a asp-action="Create" class="btn btn-success">Create New</a>
</p>
<table class="table table-striped table-bordered" id="datatable">
</table>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#datatable').DataTable({
                orderby: [[4, "desc"]],
                ajax: {
                    url: '/Admin/Auth/GetList',
                    dataSrc: function (res) {
                        return res.data
                    }
                },
                language: {
                    paginate: {
                        previous: "<",
                        next: ">",
                    }
                },
                columns: [
                    { data: 'fullName' },
                    {
                        data: 'role'
                    },
                    {
                        data: 'userName'
                    },
                    {
                        data: 'imageURL',
                        render: (data, type, row, meta) => {
                            return `<img
                                src="${row.imageURL !== undefined && row.imageURL && row.imageURL != "" ? row.imageURL : DEFAULT_IMG}"
                            class="img-index" />`
                        }
                    },
                    {
                        data: 'updatedAt',
                        render: (data, type, row, meta) => {
                            return `<p>${data ? moment(data).format("YYYY/MM/DD HH:mm:ss") : ""}</p>`
                        }
                    },
                    {
                        data: 'id',
                        render: (data, type, row, meta) => {
                            return `<div class="action">
                                <a data-id="${row.id}" class="delete btn btn-action btn-danger"><i class="fa fa-trash"></i></a>
                            </div>`
                        }
                    },
                ],
                columnDefs: [
                    {
                        targets: 0,
                        title: "Full Name",
                        className: "td-word_break",
                    },
                    {
                        targets: 1,
                        title: 'Role',
                        className: "td-word_break"
                    },
                    {
                        targets: 2,
                        title: 'User Name',
                        className: "td-word_break"
                    },
                    {
                        targets: 3,
                        title: 'Image',
                        className: "td-word_break"
                    },
                    {
                        targets: 4,
                        title: 'Updated At',
                        className: "td-word_break"
                    },
                    {
                        targets: 5,
                        title: 'Action',
                        className: "action"
                    }
                ],
                select: {
                    style: 'os',
                    selector: 'td:first-child'
                },
            })

            $(document).on("click", ".delete", function () {
                Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, delete it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        addIndicator();

                        $.ajax({
                            url: "/Admin/Auth/Delete",
                            type: "POST",
                            data: { id: $(this).data("id") },
                            success: function (res) {
                                removeIndicator();
                                if (res.status) {
                                    Swal.fire(
                                        'Deleted!',
                                        'Your file has been deleted.',
                                        'success'
                                    )
                                } else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Oops...',
                                        text: 'Something went wrong!',
                                        footer: `${res.message}`
                                    })
                                }
                            },
                            error: function () {
                                removeIndicator();

                                Swal.fire({
                                    icon: 'error',
                                    title: 'Oops...',
                                    text: 'Something went wrong!',
                                    footer: `${res.message}`
                                })
                            }
                        })
                    }
                })
            })
        })
    </script>
}