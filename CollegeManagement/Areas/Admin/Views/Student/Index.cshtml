@model IEnumerable<CollegeManagement.Models.Student>

@{
    ViewData["Title"] = "Index";
    var SchoolYears = (List<int>)ViewBag.SchoolYears;
}

<h1>Index</h1>

<p>
    <a class="btn btn-success" asp-action="Create">Create New</a>
</p>
<div class="row">
    <div class="col-md-4 form-group">
        <label class="control-label">School year</label>
        <select class="form-control" id="search-by-school-year">
            <option value="0">All</option>
            @if (SchoolYears != null && SchoolYears.Count > 0)
            {
                @foreach (var i in SchoolYears)
                {
                    <option value="@i">@i</option>
                }
            }
        </select>
    </div>
</div>
<table class="table table-striped table-bordered" id="datatable">
</table>

@section Scripts {
    <script>
        $(document).ready(function () {
            var datatable = $('#datatable').DataTable({
                processing: true,
                responsive: true,
                serverSide: true,
                ordering: true,
                paging: true,
                pageLength: 10,
                lengthMenu: [[10, 25, 50, 100], [10, 25, 50, 100]],
                pagingType: 'full_numbers',
                info: true,
                order: [[1, "asc"]],
                ajax: {
                    url: '/Admin/Student/List',
                    type: "POST",
                    data: function (d) {
                        d.SchoolYear = $('#search-by-school-year').val() ? $('#search-by-school-year').val(): new Date().getFullYear()
                    }
                },
                language: {
                    paginate: {
                        previous: "<",
                        next: ">",
                        search: "",
                        searchPlaceholder: "Search..."
                    }
                },
                columns: [
                    { data: 'name' },
                    { data: 'code' },
                    {
                        data: 'gender',
                        render: (data, type, row, meta) => {
                            return `${data === 1 ? "Male" : data === 0 ? "Female" : "Other"}`
                        }
                    },
                    {
                        data: 'dob',
                        render: (data, type, row, meta) => {
                            return `${data ? moment(data).format("DD/MM/YYYY") : ""}`
                        }
                    },
                    { data: 'courseName' },
                    {
                        data: 'status',
                        render: (data, type, row, meta) => {
                            switch (data) {
                                case 0:
                                    return `<p class="text-warning">Processing</p>`
                                case 1:
                                    return `<p class="text-info">Admission</p>`
                                case 2:
                                    return `<p class="text-danger">Expelled</p>`
                                case 3:
                                    return `<p class="text-danger">Fail</p>`
                                case 4:
                                    return `<p class="text-success">Graduating</p>`
                                default:
                                    return `<p class="text-warning">Processing</p>`
                            }
                            
                        }
                    },
                    {
                        data: 'testScore'
                    },
                    {
                        data: 'imageURL',
                        render: (data, type, row, meta) => {
                            return `<img
                                src="${row.imageURL !== undefined && row.imageURL && row.imageURL != "" ? row.imageURL : DEFAULT_IMG}"
                            class="img-index" />`
                        }
                    },
                    {
                        data: 'id',
                        render: (data, type, row, meta) => {
                            return `<div>
                                    <a href="/Admin/Student/Edit/${row.id}" class="btn btn-action btn-warning"><i class="fa fa-edit"></i></a>
                                    <a href="/Admin/Student/Details/${row.id}" class="btn btn-action btn-info"><i class="fa fa-eye"></i></a>
                                    <a href="/Admin/Student/Delete/${row.id}" class="btn btn-action btn-danger"><i class="fa fa-trash"></i></a>
                                </div>`
                        }
                    },
                ],
                columnDefs: [
                    {
                        targets: 0,
                        title: "Name",
                        className: "text-center",
                    },
                    {
                        targets: 1,
                        title: "Code",
                        className: "text-center",
                    },
                    {
                        targets: 2,
                        title: 'Gender',
                        className: "td-word_break"
                    },
                    {
                        targets: 3,
                        title: 'DOB',
                        className: "td-word_break"
                    },
                    {
                        targets: 4,
                        title: 'Course',
                        className: "td-word_break"
                    },
                    {
                        targets: 5,
                        title: 'Status',
                        className: "td-word_break"
                    },
                    {
                        targets: 6,
                        title: 'Test Score',
                        className: "td-word_break"
                    },
                    {
                        targets: 7,
                        title: 'Image',
                        className: "td-word_break"
                    },
                    {
                        targets: 8,
                        title: 'Action'
                    }
                ],
                select: {
                    style: 'os',
                    selector: 'td:first-child'
                },
            })

            $("#search-by-school-year").change(function () {
                datatable.ajax.reload();
            })
        })
    </script>
}